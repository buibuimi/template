#include<bits/stdc++.h>
using namespace std;
const int maxn=1e5+10;
int a[maxn],n,mm[100][100],mi[100][100];
///用dp预处理：
void rmq_isit(bool ok)
{
    for(int i=1;i<=n;i++)
        mm[i][0]=mi[i][0]=a[i];
    for(int j=1;(1<<j)<=n;j++)
    {
        for(int i=1;i+(1<<j)-1<=n;i++)
        {
            if(ok)
                mm[i][j]=max(mm[i][j-1],mm[i+(1<<(j-1))][j-1]);
            else
                mi[i][j]=min(mi[i][j-1],mi[i+(1<<(j-1))][j-1]);///从i->2^j连续的数中的最小值；
        }
    }
}
///查询：
int rmq(int l,int r)
{
    int k=0;
    while((1<<(k+1))<=r-l+1)
        k++;
    int ans1=max(mm[l][k],mm[r-(1<<k)+1][k]);
    int ans2=min(mi[l][k],mi[r-(1<<k)+1][k]);
    return ans1-ans2;///求最大值
    //return ans2-ans1;///求最小值；
}
int main()
{
    int l,r;
    cin>>n>>l>>r;
    for(int i=1;i<=n;i++)
    {
        cin>>a[i];
    }
    //rmq_isit(0);
    rmq_isit(1);//求最大值；
    cout<<rmq(l,r)<<endl;
    return 0;
}
